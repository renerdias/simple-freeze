#!/bin/sh

#### ------------------------------------------------------------------------------#
# 1) IDENTIFICAÇÃO/INFORMAÇÃO

# Script
NAME=freeze
DESC="Congela o sistema contra modificações, para um ou mais usuários"
VERSION=0.0.1
DATE="11-02-2020"

#Author
AUTHOR="Rener Dias"
EMAIL="<renerdias@msn.com>"

#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 2) VARIÁVEIS DE FORMATAÇÃO

# Para texto
TextRed='\033[0;31m'       # Red
TextGreen='\033[0;32m'     # Green
TextYellow='\033[0;33m'    # Yellow
TextPurple='\033[0;35m'    # Purple
TextCyan='\033[0;36m'      # Cyan
TextBlue='\033[0;44m'      # Blue
TextLightBlue='\033[0;94m' # LightBlue

# Para fundo(background)
BgRed='\033[0;41m'        # Red
BgGreen='\033[0;42m'      # Green
BgYellow='\033[0;43m'     # Yellow
BgPurple='\033[0;45m'     # Purple
BgCyan='\033[0;46m'       # Cyan
BgBlue='\033[0;44m'       # Blue
BgLightBlue='\033[0;104m' # LightBlue

# Redefinir cores
Color_Off='\033[0m' # Redefinir

# Exemplo de uso: echo "$TextCyan Adicionando repositórios... $Color_Off"

#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 3) VARIÁVEIS DE EXECUÇÃO

### ATENÇÃO É NECESSÁRIO E URGENTE ENCONTRAR OUTRO LOCAL PARA ARMAZENAR O ARQUIVO DE SENHA
# Arquivo onde será salvo a senha de acesso ao script, caso seja informada
PASSWORD_FILE=.freeze-password

# Diretório onde será salvo o backup dos arquivos do(s) usuário(s)
DIR_FREEZE=/etc/.freeze

# Arquivo que será executado na inicialização do sistema,
# para remoção das alterações feitas pelo usuário que teve sua sessão congelada
BOOT_FILE_EXEC=/etc/init.d/freeze

#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 4) VERIFICAÇÃO DE PRIVILÉGIOS DE EXECUÇÃO

# Verifica se o script está sendo executado como root
if [ "$(id -u)" != "0" ]; then
	echo
	echo "$TextBlue Você deve executar este script como root! $Color_Off"
	echo
	exit 1
fi

#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 5) FUNÇOES SECUNDÁRIAS

#===| 
security() {
	# Verifica se foi criado/existe um arquivo de senha
	if [ -e $PASSWORD_FILE ]; then
		# Pega o conteudo do arquivo
		#freeze_password=$(<$PASSWORD_FILE)
		# Pega a 1ª linha do arquivo
		freeze_password=$(head -1 $PASSWORD_FILE)
		echo "$BgYellow ATENÇÃO!!! $Color_Off Foi definida anteriormente uma senha para utilização do 'freeze'."
		echo
		read -p "Digite a senha: " password
		# Pega a senha digitda, faz o hash, e recorta de 1-32
		hash_password=$(echo -n "$password" | md5sum | cut -c 1-32)

		# Confere a senha digitada, com a senha previamente definida
		if [ $hash_password != $freeze_password ]; then
			echo
			echo
			echo "✘ Senha inválida!"
			echo
			exit 1
		fi
		echo
		echo
	fi
}

#===|
cleaner() {
	# Se existir a pasta .freeze, remove
	[ -d $DIR_FREEZE ] && rm -r $DIR_FREEZE
	
	# Se existir o arquivo que inicia junto ao boot, remove
	if [ -e $BOOT_FILE_EXEC ]; then
    # Remove todos os link's conforme informado no cabeçalho (Default-Start e Default-Stop)
		update-rc.d freeze remove
		rm $BOOT_FILE_EXEC
	fi
	
	# Se existir o arquivo de senha, remove
	if [ -e $PASSWORD_FILE ]; then
		rm $PASSWORD_FILE)
	fi

	return 0
}

#===|
check_status() {
	# Verificar se a pasta .freeze existe
	if [ ! -d $DIR_FREEZE ]; then
		return 1
	fi

	# Verificar se o arquivo freeze existe
	if [ ! -e $BOOT_FILE_EXEC ]; then
		return 1
	fi

	# Verifica se no arquivo freeze existe o comando rsync
	word='rsync -a --delete /etc/'
	if grep "$word" $BOOT_FILE_EXEC > /dev/null
	then
		return 0
	else
		return 1
	fi
}

#===|
check_user() {

  # Recebe o nome do usuário
	system_user=$1
    
  if id -u "$system_user" > /dev/null 2>&1; then
    echo #return 0
  else
    return 1
  fi

	# Verificar se a pasta do usuario informado existe
	if [ ! -d /home/$system_user ]; then		
		return 1
	fi

}

#===|
set_password() {

	new_password="$1"
	password_length=${#new_password}
	
	if [ $password_length = 0 ]; then
		if [ -e $PASSWORD_FILE ]; then
			rm $PASSWORD_FILE
		fi
		echo
		echo
		echo "✔ Senha removida com sucesso."
		echo
	else
		hash_password=$(echo -n "$new_password" | md5sum | cut -c 1-32)
		echo -n "$hash_password" >$PASSWORD_FILE
		echo
		echo
		echo "✔ Senha alterada com sucesso."
		echo
	fi
}

#===|
usage() {
    echo "usage: $NAME [options] [arguments]"
    echo
    echo "options:"
    echo "     start"
    echo "          arguments:"
    echo "               all           - Congela todos os usuários do sistema"
    echo "               this          - Congela o usuário atual"
    echo "               *             - Nome do usuário específico a ser congelado"
    echo "     stop"
    echo "          ✘ arguments:"
    echo "               all           - Todos os usuários do sistema"
    echo "               this          - Usuário atual"
    echo "               *             - Nome do usuário específico"
    echo "     status"
    echo "          ✘ arguments:"
    echo "               all           - Todos os usuários do sistema"
    echo "               this          - Usuário atual"
    echo "               *             - Nome do usuário específico"
    echo "     password                - Define um senha para o congelamento"
    echo "     help                    - Exibe instruções de uso"
    
}


#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 6) FUNÇOES PRIMÁRIAS

#===|
status_freeze() {
	check_status
	if [ "$?" -eq "0" ]; then
		echo "${TextYellow} ✔ O sistema ${Color_Off}${BgYellow} ESTÁ ${Color_Off}${TextYellow} congelado!${Color_Off}"
		echo
		echo "$BgGreen Lista de usuários congelados: $Color_Off"
		echo $TextGreen
		for file in ${DIR_FREEZE}/*; do
    	if [ -d "$file" ]; then
				echo "   ⬤ $(basename $file)"
    	fi
		done
		echo $Color_Off
	else
		echo "${TextYellow} ✘ O sistema ${Color_Off}${BgYellow} NÃO ESTÁ ${Color_Off}${TextYellow} congelado!${Color_Off}"
	fi
    echo
	exit 0	
}

#===|
stop_freeze() {
	# Verifica o status do sistema
	check_status
	if [ "$?" -ne "0" ]; then
		echo "$BgLightBlue INFO $Color_Off Não é possivel realizar esta operação, o sistema $TextLightBlue NÃO $Color_Off está congelado."
		exit 0
	fi	
	
	echo
	echo "$TextLightBlue Descongelando o sistema. Por favor aguarde...$Color_Off"
	echo
	
	cleaner
	if [ "$?" -eq "0" ]; then
		echo "$TextGreen ✔ O sistema foi descongelado com sucesso! $Color_Off"
	else
		echo "$TextRed ✘ Não foi possível descongelar o sistema! $Color_Off"
		echo
		exit 1
	fi
	echo
	exit 0
}

#===|
# Congelar o sistema para o usuario ativo/logado apenas
start_freeze_this() {
	# Há 3 formas de se pegar o nome do usuário que está executando o arquivo
	#		1) usuario=$(whoami)
	#		2) usuario="$USER"
	#		3) usuario=id -un
	
	# Há 2 formas de se pegar o nome do usuário que está logado/ativo
	#		1) usuario=$(who | awk '{print $1}')
	#		5) who | awk '{print $1}' # Este só imprimi, não retorna para variável	

	system_user=$(who | awk '{print $1}')

	check_user $system_user

	# Congela o usuário específico
	start_freeze_user $system_user
}

#===|
# Congelar o sistema para um usuário específico
start_freeze_user() {
	# Verificar quantidade de parametros
	if [ $# -lt 1 ]; then
   		echo "$BgRed ERROR $Color_Off Este comando precisa do nome do usuário como parâmetro."
		echo
		help
		exit 1
	fi

	# Verifica se a variável é nula
	if [ -z $1 ]; then
		echo "$BgRed ERROR $Color_Off Este comando precisa do nome do usuário como parâmetro."
		echo
		help
		exit 1
	fi

	# Recebe o nome do usuario informado
	system_user=$1
	
	# Verifica o status do sistema
	check_status
	if [ "$?" -eq "0" ]; then
		echo "$BgLightBlue INFO $Color_Off Não é possivel realizar esta operação, o sistema já está congelado."
    echo
		exit 0
	fi	
	
	# Verificar se a pasta do usuario informado existe
	if [ ! -d /home/$system_user ]; then		
		echo "$BgRed ERROR $Color_Off Desculpe, o usuário informado é inválido. Por favor, tente novamente..."
		echo
		exit 1
	fi
			
	create_boot_file "rsync -a --delete $DIR_FREEZE/$system_user/ /home/$system_user/"	
	if [ "$?" -ne "0" ]; then
		echo "$BgRed ERROR $Color_Off Desculpe, ocorreu um erro inesperado. Por favor, tente novamente..."
    echo
		exit 1
	fi
		
	# Realiza um cópia dos arquivos/configurações do usuário
	rsync -a /home/$system_user $DIR_FREEZE/
	# Verifica se o rsync foi executado com sucesso
	if [ $? -eq 0 ]; then
		echo
		echo "$TextGreen ✔ Sistema congelado com sucesso! $Color_Off"
		echo "$TextYellow ➤ Reinicie o computador para concluir... $Color_Off"			
		echo
		exit 0
	fi
	
	echo "$BgRed ERROR $Color_Off Desculpe, ocorreu um erro inesperado. Por favor, tente novamente..."
	echo "Desfazendo modificações..."
	cleaner
	if [ "$?" -eq "0" ]; then
		echo "$BgYellow  STATUS:  $Color_Off Modificações desfeitas com sucesso!"
	else
		echo "$BgRed  STATUS:  $Color_Off Não foi possível desfazer as modificações!"
	fi
	echo
	exit 1
}

#===|
# Congelar o sistema para todos os usuários
start_freeze_all() {
	
	# Verifica o status do sistema
	check_status
	if [ "$?" -eq "0" ]; then
		echo "$BgLightBlue INFO $Color_Off Não é possivel realizar esta operação, o sistema já está congelado."
		exit 0
	fi	
				
	create_boot_file "rsync -a --delete $DIR_FREEZE/ /home/"	
	if [ "$?" -ne "0" ]; then
		echo "$BgRed ERROR $Color_Off Desculpe, ocorreu um erro inesperado. Por favor, tente novamente..."
		exit 1
	fi
		
	# Realiza um cópia dos arquivos/configurações dos usuários
	rsync -a /home/ $DIR_FREEZE/
	# Verifica se o rsync foi executado com sucesso
	if [ $? -eq 0 ]; then
		echo
		echo "$TextGreen ✔ Sistema congelado com sucesso! $Color_Off"
		echo "$TextYellow ➤ Reinicie o computador para concluir... $Color_Off"			
		echo
		exit 0
	fi
	
	echo "$BgRed ERROR $Color_Off Desculpe, ocorreu um erro inesperado. Por favor, tente novamente..."
	echo "Desfazendo modificações..."
	cleaner
	if [ "$?" -eq "0" ]; then
		echo "$BgYellow  STATUS:  $Color_Off Modificações desfeitas com sucesso!"
	else
		echo "$BgRed  STATUS:  $Color_Off Não foi possível desfazer as modificações!"
	fi
	echo
	exit 1
}

#===|
# Cria o arquivo que realizará a limpeza das alterações do(s) usuários, na inicialização do sistema
# Recebe como parâmetro, o comando a ser executado na inicialização
create_boot_file() {
	
	# Remove possíveis sujeiras
	cleaner
	
	echo "#!/bin/sh" >freeze_temp	
	echo "#" >>freeze_temp
	echo "### BEGIN INIT INFO" >>freeze_temp
	echo "# Provides:          freeze" >>freeze_temp
	echo "# Required-Start:    remote_fs syslog time" >>freeze_temp
	echo "# Required-Stop:     remote_fs syslog time" >>freeze_temp
	echo "# Should-Start:      network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
	echo "# Should-Stop:       network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
	echo "# Default-Start:     2 3 4 5" >>freeze_temp
	echo "# Default-Stop:	   0 1 6" >>freeze_temp
	echo "# Short-Description: Regular background program processing daemon" >>freeze_temp
	echo "# Description:       cron is a standard UNIX program that runs user-specified " >>freeze_temp
	echo "#                    programs at periodic scheduled times. vixie cron adds a " >>freeze_temp
	echo "#                    number of features to the basic UNIX cron, including better" >>freeze_temp
	echo "#                    security and more powerful configuration options." >>freeze_temp
	echo "### END INIT INFO" >>freeze_temp
	echo "" >>freeze_temp
	#echo "PATH=/bin:/usr/bin:/sbin:/usr/sbin" >>freeze_temp
	echo "NAME=freeze" >>freeze_temp
	echo 'DESC="Executa a limpeza das alterações feitas pelo(s) usuário(s) durante o congelamento do sistema"' >>freeze_temp
	echo "" >>freeze_temp
	echo "$1" >>freeze_temp
	echo "" >>freeze_temp
	echo "exit 0" >>freeze_temp
	#	echo "exit $?" >>freeze_temp

	# //TODO Verificar a necessidade de criar um arquivo temporário, ao invés de criar o arquivo direto
	cp freeze_temp $BOOT_FILE_EXEC
	rm freeze_temp
	chmod +x $BOOT_FILE_EXEC
	
	# Adicionar link's nos vários niveis de inicialização do sistema
	# Lembrando que update-rc.d, usa as informações do cabeçalho Default-Start e Default-Stop
	update-rc.d $NAME defaults

	# Cria o diretório de congelamento
	mkdir $DIR_FREEZE/
	
	return 0
}
#------------------------------------------------------------------------------ ####




#### ------------------------------------------------------------------------------#
# 6) INICIALIZAÇÃO

# Inicializa fazendo checagem de segurança
security

case "$1" in
start)
	case "$2" in
	all) start_freeze_all ;;
	this) start_freeze_this;;
	*) start_freeze_user $2 ;;
	esac
	;;
stop)
	stop_freeze
	;;
status)
	status_freeze
	;;
password)
	set_password "$2"
	;;
*) usage
	exit 3
	;;
esac
#------------------------------------------------------------------------------ ####



