#!/bin/sh

### BEGIN INIT INFO
# Provides:	  nginx
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
#DAEMON=/usr/sbin/nginx
NAME=freeze
DESC=freeze


# //FIXME PENDENCIAS
# Configurar cabeçalho




#### ------------------------------------------------------------------------------#
# VARIÁVEIS ESTÈTICAS

# Para texto
TextRed='\033[0;31m'       # Red
TextGreen='\033[0;32m'     # Green
TextYellow='\033[0;33m'    # Yellow
TextPurple='\033[0;35m'    # Purple
TextCyan='\033[0;36m'      # Cyan
TextBlue='\033[0;44m'      # Blue
TextLightBlue='\033[0;94m' # LightBlue

# Para fundo(background)
BgRed='\033[0;31m'        # Red
BgGreen='\033[0;42m'      # Green
BgYellow='\033[0;43m'     # Yellow
BgPurple='\033[0;45m'     # Purple
BgCyan='\033[0;46m'       # Cyan
BgBlue='\033[0;44m'       # Blue
BgLightBlue='\033[0;104m' # LightBlue

# Redefinir cores
Color_Off='\033[0m' # Redefinir

# EX.: echo "$TextCyan Adicionando repositórios... $Color_Off"
#------------------------------------------------------------------------------ ####


#### ------------------------------------------------------------------------------#
# Verifica se o script está sendo executado como root
if [ "$(id -u)" != "0" ]; then
	echo
	echo "$BgRed Você deve executar este script como root! $Color_Off"
	exit
fi
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
credit() {
	echo "${TextYellow}"
	echo "# =============================================================================="
	echo "#                               SIMPLE FREEZE"
	echo "# =============================================================================="
	echo "$Color_Off"
	# echo ""
	echo "# =============================================================================="
	echo "# Dafturn Ofris Erdana - Locking your System"
	echo "# Version       : 1.9.05-en"
	echo "# Created by    : Muhammad Faruq Nuruddinsyah"
	echo "# E-Mail        : faruq@dafturn.org"
	echo "# Created date  : October, 12th 2008"
	echo "# =============================================================================="
	# echo ""
	echo "# =============================================================================="
	echo "# Modified by:   Ali Riza KESKIN (SulinOS community)"
	echo "# https://github.com/SulinOS/dafturn-ofris"
	echo "# Modified date: 06.11.2019"
	echo "# =============================================================================="
	# echo ""
	echo "${TextYellow}"
	echo "# =============================================================================="
	echo "# Adaptado por:   Rener Dias <renerdias@msn.com>"
	echo "# Data de modificação: 10.02.2020"
	echo "# =============================================================================="
	echo "$Color_Off"
	echo ""
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
security() {
	# Verifica se foi criado/existe um arquivo de senha
	if [ -e .freeze-password ]; then
		# Pega o conteudo do arquivo
		freeze_password=$(<.freeze-password)
		echo -n "Digite a senha: "
		read -s password
		# Pega a senha digitda, faz o hash, e recorta de 1-32
		password=$(echo -n "$password" | md5sum | cut -c 1-32)

		# Confere a senha digitada, com a senha previamente definida
		if [ $password != $freeze_password ]; then
			echo
			echo
			echo "✘ Senha inválida!"
			echo
			exit
		fi
		echo
		echo
	fi
}
#------------------------------------------------------------------------------ ####











# //FIXME Procurar um outro local de destino para a pasta .freeze, não faz muito sentido ela ficar em /etc
# //FIXME Alterar pasta freeze para /home/.freeze, por questão de espaço, mas excluir ela na sincronização

#----- Mendeklarasikan variabel -----
is_options=false
is_success=true
ofris_n=6
freeze_temp_co=1
is_cho=false



#Best practices & Compression
#A command to remember, that can be useful for you in all situations:

#rsync -avhP source/ destination
#Let's see new arguments :

#-h : for “humanize”. Transforms bytes to Kilo/Mega/Gigabytes to make it more easy to read.
#-P : for “Progress”. Displays the process of the transfer in real time (with -v, it will display the process file by file).

FILE_EXEC=/etc/init.d/freeze
#------------------------------------





#### ------------------------------------------------------------------------------#
start_freeze() {
	if [ $is_cho = true ]; then
		is_cho_suc=false
		while [ $is_cho_suc = false ]; do
			is_cho_suc=false
			echo -n "Please type the username you want to freeze: "
			read ofris_cho

			if [ -d "/home/$ofris_cho" ]; then
				echo
				is_cho_suc=true
				system_user=$ofris_cho
			else
				echo "Sorry, the username is wrong. Please try again..."
				echo
			fi
		done
	fi

	if [ $freeze_restante = 1 ]; then
		echo "Error : O sistema foi congelado."
		echo
		is_success=false
	else
		grep -v "exit 0" $FILE_EXEC >freeze_temp
		echo "rsync -a --delete /etc/.freeze/$system_user/ /home/$system_user/" >>freeze_temp
		echo "exit 0" >>freeze_temp
		rm $FILE_EXEC
		cp freeze_temp $FILE_EXEC
		rm freeze_temp
	fi

	if [ $is_success = true ]; then
		if [ -d /etc/.freeze ]; then
			rm -r /etc/.freeze
		fi

		if [ -d /etc/.freeze ]; then
			rsync -a --delete /home/$system_user /etc/.freeze/
		else
			mkdir /etc/.freeze/

			if [ $system_user != "" ]; then
				mkdir /etc/.freeze/$system_user
			fi

			rsync -a --delete /home/$system_user /etc/.freeze/
		fi

		chmod +x $FILE_EXEC
		chmod 775 $FILE_EXEC
	fi

	if [ $is_success = true ]; then
		echo "O sistema foi congelado com sucesso. Reinicie o computador para concluir..."
		echo
	fi
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
start_freeze_this() {
	#echo usuario=$(whoami) > dados.txt
	#echo "$USER" >> dados.txt
	#id -un >> dados.txt

	# 1. Congelar o sistema para este usuário apenas
	freeze_temp_co=1
	if [ $is_cho = true ]; then
		is_cho_suc=false
		while [ $is_cho_suc = false ]; do
			is_cho_suc=false
			echo -n "Please type the username you want to freeze: "
			read ofris_cho

			if [ -d "/home/$ofris_cho" ]; then
				echo
				is_cho_suc=true
				system_user=$ofris_cho
			else
				echo "Sorry, the username is wrong. Please try again..."
				echo
			fi
		done
	fi

	if [ $freeze_restante = 1 ]; then
		echo "Error : O sistema foi congelado."
		echo
		is_success=false
	else
		grep -v "exit 0" $FILE_EXEC >freeze_temp
		echo "rsync -a --delete /etc/.freeze/$system_user/ /home/$system_user/" >>freeze_temp
		echo "exit 0" >>freeze_temp
		rm $FILE_EXEC
		cp freeze_temp $FILE_EXEC
		rm freeze_temp
	fi

	if [ $is_success = true ]; then
		if [ -d /etc/.freeze ]; then
			rm -r /etc/.freeze
		fi

		if [ -d /etc/.freeze ]; then
			rsync -a --delete /home/$system_user /etc/.freeze/
		else
			mkdir /etc/.freeze/

			if [ $system_user != "" ]; then
				mkdir /etc/.freeze/$system_user
			fi

			rsync -a --delete /home/$system_user /etc/.freeze/
		fi

		chmod +x $FILE_EXEC
		chmod 775 $FILE_EXEC
	fi

	if [ $is_success = true ]; then
		echo "O sistema foi congelado com sucesso. Reinicie o computador para concluir..."
		echo
	fi
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
# Congelar o sistema para um usuário específico
start_freeze_user() {
	
	# Verifica o status do sistema
	if [ $freeze_restante = 1 ]; then
		echo
		echo "`$BgLightBlue` INFO `$Color_Off` Não é possivel realizar esta operação, o sistema já está congelado."
		echo
		exit
	fi
	
	# Recebe o nome do usuario informado
	usuario=$1

	# Verificar se a pasta do usuario informado existe
	if [ -d "/home/$usuario" ]; then
		system_user=$usuario
	else
		echo "`$BgRed` ERROR `$Color_Off` Desculpe, o usuário informado é inválido. Por favor, tente novamente..."
		echo
		exit
	fi

	# PRECISA ATENÇÃO E DESCRIÇÃO DOS EVENTOS
		grep -v "exit 0" $FILE_EXEC >freeze_temp
		echo "rsync -a --delete /etc/.freeze/$system_user/ /home/$system_user/" >>freeze_temp
		echo "exit 0" >>freeze_temp
		rm $FILE_EXEC
		cp freeze_temp $FILE_EXEC
		chmod +x $FILE_EXEC
		chmod 775 $FILE_EXEC
		rm freeze_temp
		
	# Verifica se existe a pasta de congelamento/backup e a remove
	if [ -d /etc/.freeze ]; then		
		rm -r /etc/.freeze
	fi
		
	# Cria o diretório de congelamento
	mkdir /etc/.freeze/
	# Cria o diretório de congelamento do usuário específico
	# Não há necessidade, já que no comando rsync é criado o diretorio de origem no destino
	# mkdir /etc/.freeze/$system_user
	# VERIFICAR OPÇÕES DO RSYNC, SERÁ QUE É NECESSÁRIO ESSE DELETE, JA QUE A PASTA DE DESTINO ESTARÁ VAZIA
	#rsync -a --delete /home/$system_user /etc/.freeze/
	rsync -avhP /home/$system_user /etc/.freeze/
	# Verifica se o rsync foi executado com sucesso
	if [ $? -eq 0 ]; then
		echo
		echo "$TextGreen ✔ Sistema congelado com sucesso! $Color_Off"
		echo "$TextYellow ➤ Reinicie o computador para concluir... $Color_Off"			
		echo
		exit
	fi
	
	echo "`$BgRed` ERROR `$Color_Off` Desculpe, ocorreu um erro inesperado. Por favor, tente novamente..."
	echo "Limpando..."
	#rm -r /etc/.freeze
	# criar file_exec novamente
	echo
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
start_freeze_all() {
	# 3. Congelar o sistema para todos os usuários
	freeze_temp_co=3
	if [ $is_cho = true ]; then
		is_cho_suc=false
		while [ $is_cho_suc = false ]; do
			is_cho_suc=false
			echo -n "Please type the username you want to freeze: "
			read ofris_cho

			if [ -d "/home/$ofris_cho" ]; then
				echo
				is_cho_suc=true
				system_user=$ofris_cho
			else
				echo "Sorry, the username is wrong. Please try again..."
				echo
			fi
		done
	fi

	if [ $freeze_restante = 1 ]; then
		echo "Error : O sistema foi congelado."
		echo
		is_success=false
	else
		grep -v "exit 0" $FILE_EXEC >freeze_temp
		echo "rsync -a --delete /etc/.freeze/$system_user/ /home/$system_user/" >>freeze_temp
		echo "exit 0" >>freeze_temp
		rm $FILE_EXEC
		cp freeze_temp $FILE_EXEC
		rm freeze_temp
	fi

	if [ $is_success = true ]; then
		if [ -d /etc/.freeze ]; then
			rm -r /etc/.freeze
		fi

		if [ -d /etc/.freeze ]; then
			rsync -a --delete /home/$system_user /etc/.freeze/
		else
			mkdir /etc/.freeze/

			if [ $system_user != "" ]; then
				mkdir /etc/.freeze/$system_user
			fi

			rsync -a --delete /home/$system_user /etc/.freeze/
		fi

		chmod +x $FILE_EXEC
		chmod 775 $FILE_EXEC
	fi

	if [ $is_success = true ]; then
		echo "O sistema foi congelado com sucesso. Reinicie o computador para concluir..."
		echo
	fi
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
set_user() {
	if [ $freeze_temp_co = 1 ]; then
		system_user="${HOME:$ofris_n}"
	elif [ $freeze_temp_co = 3 ]; then
		system_user=""
	elif [ $freeze_temp_co = 2 ]; then
		is_cho=true
		system_user=""
	fi
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
stop_freeze() {
	#----- Membuka sistem -----
	echo
	echo "===== Descongelando o sistema ====="
	echo
	echo "Por favor aguarde..."
	grep -v "rsync -a --delete /etc/" $FILE_EXEC >freeze_temp_b
	rm $FILE_EXEC
	cp freeze_temp_b $FILE_EXEC
	chmod +x $FILE_EXEC
	chmod 775 $FILE_EXEC
	rm freeze_temp_b

	if [ -d /etc/.freeze ]; then
		rm -r /etc/.freeze
	fi

	echo
	echo "O sistema foi descongelado com sucesso..."
	echo
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
status_freeze() {
	if [ $freeze_restante = 1 ]; then
		echo "$BgYellow  STATUS:  $Color_Off O sistema ${TextLightBlue} NãO ESTÁ $Color_Off bloqueado..."
	else
		echo "$BgYellow  STATUS:  $Color_Off O sistema ${TextYellow} NãO ESTÁ $Color_Off bloqueado..."
	fi
	echo
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
set_password() {
	#----- Password protection by Kelompok 4 OSSDev -----
	#----- Set or clear password -----
	echo
	echo "===== Configurando senha ====="
	echo

	echo -n "$1" >.freeze_temp_pwd
	password_count=$(wc -m .freeze_temp_pwd)
	rm .freeze_temp_pwd
	password_count=${password_count:0:1}

	if [ $password_count = 0 ]; then
		if [ -e .freeze-password ]; then
			rm .freeze-password
		fi
		echo
		echo
		echo "Senha removida com sucesso."
		echo
	else
		hash_password=$(echo -n "$new_password" | md5sum | cut -c 1-32)
		echo -n "$hash_password" >.freeze-password

		echo
		echo
		echo "Senha alterada com sucesso."
		echo
	fi
}
#------------------------------------------------------------------------------ ####

#### ------------------------------------------------------------------------------#
create_freeze_cleanchange() {
	if [ -e /etc/init.d/freeze ]; then
		echo
	else
		echo "#!/bin/sh" >freeze_temp
		echo "# Start/stop the cron daemon." >>freeze_temp
		echo "#" >>freeze_temp
		echo "### BEGIN INIT INFO" >>freeze_temp
		echo "# Provides:          freeze" >>freeze_temp
		echo "# Required-Start:    remote_fs syslog time" >>freeze_temp
		echo "# Required-Stop:     remote_fs syslog time" >>freeze_temp
		echo "# Should-Start:      network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
		echo "# Should-Stop:       network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
		echo "# Default-Start:     2 3 4 5" >>freeze_temp
		echo "# Default-Stop:" >>freeze_temp
		echo "# Short-Description: Regular background program processing daemon" >>freeze_temp
		echo "# Description:       cron is a standard UNIX program that runs user-specified " >>freeze_temp
		echo "#                    programs at periodic scheduled times. vixie cron adds a " >>freeze_temp
		echo "#                    number of features to the basic UNIX cron, including better" >>freeze_temp
		echo "#                    security and more powerful configuration options." >>freeze_temp
		echo "### END INIT INFO" >>freeze_temp
		echo "" >>freeze_temp
		echo "PATH=/bin:/usr/bin:/sbin:/usr/sbin" >>freeze_temp
		echo "DESC="cron daemon"" >>freeze_temp
		echo "NAME=freeze" >>freeze_temp
		echo "#DAEMON=/usr/sbin/cron" >>freeze_temp
		echo "#PIDFILE=/var/run/crond.pid" >>freeze_temp
		echo "SCRIPTNAME=/etc/init.d/NAME" >>freeze_temp
		echo "" >>freeze_temp
		echo "exit 0" >>freeze_temp

		rm /etc/init.d/freeze
		cp freeze_temp /etc/init.d/freeze
		rm freeze_temp
		chmod +x /etc/init.d/freeze
		chmod 775 /etc/init.d/freeze

		#rm /etc/rc0.d/S01freeze
		# rm /etc/rc1.d/S01freeze
		rm /etc/rc2.d/S01freeze
		rm /etc/rc3.d/S01freeze
		rm /etc/rc4.d/S01freeze
		rm /etc/rc5.d/S01freeze
		# rm /etc/rc6.d/S01freeze

		# ln -s /etc/init.d/freeze /etc/rc0.d/S01freeze
		# ln -s /etc/init.d/freeze /etc/rc1.d/S01freeze
		ln -s /etc/init.d/freeze /etc/rc2.d/S01freeze
		ln -s /etc/init.d/freeze /etc/rc3.d/S01freeze
		ln -s /etc/init.d/freeze /etc/rc4.d/S01freeze
		ln -s /etc/init.d/freeze /etc/rc5.d/S01freeze
		# ln -s /etc/init.d/freeze /etc/rc6.d/S01freeze
	fi
}
#------------------------------------------------------------------------------ ####


#### ------------------------------------------------------------------------------#
# Cria o arquivo que realizará a limpeza das alterações do(s) usuários, na inicialização do sistema
create_boot_file() {
	if [ -e /etc/init.d/freeze ]; then
		rm /etc/init.d/freeze
		#rm /etc/rc0.d/S01freeze
		# rm /etc/rc1.d/S01freeze
		rm /etc/rc2.d/S01freeze
		rm /etc/rc3.d/S01freeze
		rm /etc/rc4.d/S01freeze
		rm /etc/rc5.d/S01freeze
		# rm /etc/rc6.d/S01freeze
	fi
	
	# //TODO MELHORAR ESSE CABEÇALHO
	echo "#!/bin/sh" >freeze_temp
	echo "# Start/stop the cron daemon." >>freeze_temp
	echo "#" >>freeze_temp
	echo "### BEGIN INIT INFO" >>freeze_temp
	echo "# Provides:          freeze" >>freeze_temp
	echo "# Required-Start:    remote_fs syslog time" >>freeze_temp
	echo "# Required-Stop:     remote_fs syslog time" >>freeze_temp
	echo "# Should-Start:      network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
	echo "# Should-Stop:       network named slapd autofs ypbind nscd nslcd winbind" >>freeze_temp
	echo "# Default-Start:     2 3 4 5" >>freeze_temp
	echo "# Default-Stop:" >>freeze_temp
	echo "# Short-Description: Regular background program processing daemon" >>freeze_temp
	echo "# Description:       cron is a standard UNIX program that runs user-specified " >>freeze_temp
	echo "#                    programs at periodic scheduled times. vixie cron adds a " >>freeze_temp
	echo "#                    number of features to the basic UNIX cron, including better" >>freeze_temp
	echo "#                    security and more powerful configuration options." >>freeze_temp
	echo "### END INIT INFO" >>freeze_temp
	echo "" >>freeze_temp
	echo "PATH=/bin:/usr/bin:/sbin:/usr/sbin" >>freeze_temp
	echo "DESC="cron daemon"" >>freeze_temp
	echo "NAME=freeze" >>freeze_temp
	echo "#DAEMON=/usr/sbin/cron" >>freeze_temp
	echo "#PIDFILE=/var/run/crond.pid" >>freeze_temp
	echo "SCRIPTNAME=/etc/init.d/NAME" >>freeze_temp
	echo "" >>freeze_temp
	echo "$1" >>freeze_temp
	echo "" >>freeze_temp
	echo "exit 0" >>freeze_temp

	# VERIFICAR A NECESSIDADE CRIAR UM ARQUIVO TEMPORARIO, AO INVÉS DE CRIAR O ARQUIVO DIRETO
	cp freeze_temp /etc/init.d/freeze
	rm freeze_temp
	chmod +x /etc/init.d/freeze
	chmod 775 /etc/init.d/freeze

	# Adicionar link's nos vários niveis de inicialização do sistema
	#OBS.: Testar a necessidade de colocar em varios níveis
	# ln -s /etc/init.d/freeze /etc/rc0.d/S01freeze
	# ln -s /etc/init.d/freeze /etc/rc1.d/S01freeze
	ln -s /etc/init.d/freeze /etc/rc2.d/S01freeze
	ln -s /etc/init.d/freeze /etc/rc3.d/S01freeze
	ln -s /etc/init.d/freeze /etc/rc4.d/S01freeze
	ln -s /etc/init.d/freeze /etc/rc5.d/S01freeze
	# ln -s /etc/init.d/freeze /etc/rc6.d/S01freeze
}
#------------------------------------------------------------------------------ ####


#### ------------------------------------------------------------------------------#
calc() {
#cmp -s file1 file2 
#0 = identicos
#1 = diferentes
#2 = não conseguie comparar os arquivos

#echo -e "Digite o nome do arquivo e a palavra: "
#read file word

# comando grep procura pela palavra $word no arquivo $file
# > /dev/null redireciona a saída do comando grep
#if grep $word $file > /dev/null
#then
#echo "A palavra $word existe no arquivo $file."
#i

	grep -v "rsync -a --delete /etc/" $FILE_EXEC >freeze_temp
	set $(wc -l freeze_temp)
	freeze_original=$1
	set $(wc -l $FILE_EXEC)
	freeze_recente=$1
	freeze_restante=$(($freeze_recente - $freeze_original))
	rm freeze_temp
}
#------------------------------------------------------------------------------ ####

credit
security
# create_freeze_cleanchange
calc

case "$1" in
start)
	echo
	echo "===== Freeze the System ====="
	echo
	echo "Please wait..."
	echo

	case "$2" in
	all) start_freeze_all ;;
	this) start_freeze_this ;;
	*) start_freeze_user "$2" ;;
	esac
	;;
stop)
	stop_freeze
	;;
status)
	status_freeze
	;;
password)
	set_password "$2"
	;;
*)
	echo "Usage: $NAME command [options]"
	echo ""
	echo "Commands:"
	echo "  start:"
	echo "    all      - Todos os usuários do sistema"
	echo "    this     - Usuário atual"
	echo "    *        - Nome do usuário específico"
	echo ""
	echo "  stop       - Interronpe o congelamento"
	echo "  status     - Verifica se o sistema está congelado"
	echo "  password   - Define um senha para o congelamento"
	exit 3
	;;
esac
